version: '3'
services:
  mongodb2:
    image: mongo:latest  # Use the official MongoDB Docker image
    ports:
      - '27017:27017'  # Map the container's port to host port
    environment:
      - MONGO_INITDB_ROOT_USERNAME=myuser  # Set the MongoDB root username
      - MONGO_INITDB_ROOT_PASSWORD=mypassword  # Set the MongoDB root password

  webapi:
    build:
      context: ./backend/web_api   # Path to your web API Dockerfile
    ports:
      - '3000:3000'       # Map the container's port to host port
    environment:
      - MONGODB_URI=mongodb://myuser:mypassword@mongodb2:27017
      - NODE_ENV=development
    depends_on:
      - mongodb2  # Ensure the 'mongodb' service starts first
    command: npm run start

  reactapp_pro:
    build:
      context: ./frontend/react_app  # Path to your React app Dockerfile
      args:
        VITE_APP_BACKEND_WEB_API_URL: http://localhost:3000
        VITE_APP_DEBUG: TRUE
        VITE_APP_MODE: PRODUCTION
    ports:
      - '8080:80'           # Map the container's port to host port
    # environment:
    #   - VITE_APP_BACKEND_WEB_API_URL=http://webapi:3000
    #   - VITE_APP_DEBUG=TRUE
    depends_on:
      - webapi

  reactapp_dev:
    build:
      context: ./frontend/react_app  # Path to your React app Dockerfile
      args:
        # VITE_APP_BACKEND_WEB_API_URL: http://webapi:3000 # this will work inside the container because it has access to the webapi service
        VITE_APP_BACKEND_WEB_API_URL: http://localhost:3000
        VITE_APP_DEBUG: TRUE
        VITE_APP_MODE: DEVELOPMENT
    ports:
      - '5050:80'           # Map the container's port to host port



